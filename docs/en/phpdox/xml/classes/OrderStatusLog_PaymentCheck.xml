<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src#" full="OrderStatusLog_PaymentCheck" namespace="" name="OrderStatusLog_PaymentCheck" abstract="false" final="false" start="644" end="719">
  <file path="./../../../code/model/process" file="OrderStatusLog.php" realpath="/var/www/3.1.silverstripe-ecommerce.com/ecommerce/code/model/process/OrderStatusLog.php" size="20381" time="2013-08-29T12:03:23+12:00" unixtime="1377734603" sha1="dd00199c5834e09ae9b77b016f815b6fb01e6214"/>
  <docblock>
    <description/>
    <description value=": We use this payment check class to double check that payment has arrived against">the order placed.  We do this independently of Order as a double-check.  It is important
that we do this because the main risk in an e-commerce operation is a fake payment.
Any e-commerce operator may set up their own policies on what a payment check
entails exactly.  It could include a bank reconciliation or even a phone call to the customer.
it is important here that we do not add any payment details. Rather, all we have is a tickbox</description>
    <authors value=": Nicolaas [at] Sunny Side Up .co.nz"/>
    <package value=": ecommerce"/>
    <sub value="-package: model"/>
    <inspiration value=": Silverstripe Ltd, Jeremy"/>
  </docblock>
  <extends full="OrderStatusLog" namespace="" name="OrderStatusLog"/>
  <member name="defaults" type="array" visibility="private" line="646"/>
  <member name="db" type="array" visibility="private" line="650"/>
  <method name="canDelete" start="659" end="661" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Standard SS method"/>
      <param type="object" variable="$member">
        <type full="Member" namespace="" name="Member"/>
      </param>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
    <parameter name="member" byreference="false" type="{unknown}" default="null"/>
  </method>
  <member name="searchable_fields" type="array" visibility="private" line="663"/>
  <member name="summary_fields" type="array" visibility="private" line="671"/>
  <member name="casting" type="array" visibility="private" line="677"/>
  <method name="PaymentConfirmedNice" start="681" end="681" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getPaymentConfirmedNice" start="682" end="682" abstract="false" final="false" static="false" visibility="public"/>
  <member name="singular_name" type="string" default="&quot;Payment Confirmation&quot;" visibility="private" line="684"/>
  <method name="i18n_singular_name" start="685" end="685" abstract="false" final="false" static="false" visibility="public"/>
  <member name="plural_name" type="string" default="&quot;Payment Confirmations&quot;" visibility="private" line="687"/>
  <method name="i18n_plural_name" start="688" end="688" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getCMSFields" start="690" end="699" abstract="false" final="false" static="false" visibility="public"/>
  <method name="CustomerNote" start="706" end="706" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="return String"/>
    </docblock>
  </method>
  <method name="getCustomerNote" start="707" end="716" abstract="false" final="false" static="false" visibility="public"/>
  <parent full="OrderStatusLog" namespace="" name="OrderStatusLog">
    <extends full="DataObject" namespace="" name="DataObject"/>
    <method name="InternalUseOnlyNice" start="66" end="66" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="casted method"/>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
    </method>
    <method name="getInternalUseOnlyNice" start="67" end="67" abstract="false" final="false" static="false" visibility="public"/>
    <method name="canView" start="75" end="90" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Standard SS method"/>
        <param type="object" variable="$member">
          <type full="Member" namespace="" name="Member"/>
        </param>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="member" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="canDelete" start="97" end="99" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Standard SS method"/>
        <param type="object" variable="$member">
          <type full="Member" namespace="" name="Member"/>
        </param>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="member" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="canCreate" start="106" end="108" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Standard SS method"/>
        <param type="object" variable="$member">
          <type full="Member" namespace="" name="Member"/>
        </param>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="member" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="canEdit" start="115" end="120" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Standard SS method"/>
        <param type="object" variable="$member">
          <type full="Member" namespace="" name="Member"/>
        </param>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="member" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="i18n_singular_name" start="144" end="144" abstract="false" final="false" static="false" visibility="public"/>
    <method name="i18n_plural_name" start="151" end="151" abstract="false" final="false" static="false" visibility="public"/>
    <method name="populateDefaults" start="168" end="171" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="standard SS method"/>
      </docblock>
    </method>
    <method name="getCMSFields" start="177" end="201" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="return FieldList"/>
      </docblock>
      <inline>
        <comment value="OrderID Field" line="184"/>
        <comment value="ClassName Field" line="190"/>
      </inline>
    </method>
    <method name="Type" start="208" end="208" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
    </method>
    <method name="getType" start="209" end="211" abstract="false" final="false" static="false" visibility="public"/>
    <method name="scaffoldSearchFields" start="228" end="237" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Determine which properties on the DataObject are searchable, and map them to their default {@link FormField} representations. Used for scaffolding a searchform for {@link ModelAdmin}.">Some additional logic is included for switching field labels, based on
how generic or specific the field type is.
Used by <link xmlns="http://xml.phpdox.net/src#" value="SearchContext"/>.
</description>
        <param type="array" variable="$_params">'fieldClasses': Associative array of field names as keys and FormField classes as values
	'restrictFields': Numeric array of a field name whitelist</param>
        <return type="object">
          <type full="FieldList" namespace="" name="FieldList"/>
        </return>
      </docblock>
      <parameter name="_params" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="onBeforeWrite" start="243" end="262" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="standard SS method"/>
      </docblock>
      <inline>
        <comment value="START HACK TO PREVENT LOSS OF ORDERID CAUSED BY COMPLEX TABLE FIELDS...." line="245"/>
        <comment value="THIS MEANS THAT A LOG CAN NEVER SWITCH FROM ONE ORDER TO ANOTHER..." line="246"/>
        <comment value="END HACK TO PREVENT LOSS" line="253"/>
      </inline>
    </method>
    <method name="CustomerNote" start="268" end="268" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="return String"/>
      </docblock>
    </method>
    <method name="getCustomerNote" start="269" end="271" abstract="false" final="false" static="false" visibility="public"/>
    <method name="EcomConfig" start="278" end="280" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="returns the standard EcommerceDBConfig for use within OrderSteps."/>
        <return type="object">
          <type full="EcommerceDBConfig" namespace="" name="EcommerceDBConfig"/>
        </return>
      </docblock>
    </method>
    <method name="debug" start="287" end="289" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Debug helper method.">Can be called from /shoppingcart/debug/</description>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
    </method>
  </parent>
</class>
