<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src#" full="ProductGroupSearchPage" namespace="" name="ProductGroupSearchPage" abstract="false" final="false" start="12" end="47">
  <file path="./../../../code" file="ProductGroupSearchPage.php" realpath="/var/www/3.1.silverstripe-ecommerce.com/ecommerce/code/ProductGroupSearchPage.php" size="1091" time="2014-04-25T09:02:16+12:00" unixtime="1398373336" sha1="649e5743f641926f9faa0d7f1d6cc6b9473120ed"/>
  <docblock>
    <description compact="This page manages searching for products"/>
    <authors value=": Nicolaas [at] Sunny Side Up .co.nz"/>
    <package value=": ecommerce"/>
    <sub value="-package: Pages"/>
  </docblock>
  <extends full="ProductGroup" namespace="" name="ProductGroup"/>
  <member name="icon" type="string" default="'ecommerce/images/icons/productsearch'" visibility="private" line="19">
    <docblock>
      <description compact="standard SS variable"/>
      <static value="String | Array"/>
    </docblock>
  </member>
  <member name="description" type="string" default="&quot;This page manages searching for products.&quot;" visibility="private" line="25">
    <docblock>
      <description compact="Standard SS variable."/>
      <var type="object">
        <type full="String" namespace="" name="String"/>
      </var>
    </docblock>
  </member>
  <member name="singular_name" type="string" default="&quot;Product Search Page&quot;" visibility="private" line="30">
    <docblock>
      <description compact="Standard SS variable."/>
    </docblock>
  </member>
  <method name="i18n_singular_name" start="31" end="31" abstract="false" final="false" static="false" visibility="public"/>
  <member name="plural_name" type="string" default="&quot;Product Search Pages&quot;" visibility="private" line="36">
    <docblock>
      <description compact="Standard SS variable."/>
    </docblock>
  </member>
  <method name="i18n_plural_name" start="37" end="37" abstract="false" final="false" static="false" visibility="public"/>
  <method name="canCreate" start="43" end="45" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="This temporarily hides the page while we it is being completed."/>
    </docblock>
    <parameter name="member" byreference="false" type="{unknown}" default="null"/>
  </method>
  <parent full="ProductGroup" namespace="" name="ProductGroup">
    <extends full="Page" namespace="" name="Page"/>
    <member name="sortFilterDisplayNames" type="array" visibility="protected" line="224">
      <docblock>
        <description compact="list of sort / filter / display variables"/>
        <var type="object">
          <type full="Array" namespace="" name="Array"/>
        </var>
      </docblock>
    </member>
    <member name="showProductLevels" type="array" visibility="protected" line="496">
      <docblock>
        <description/>
        <var type="object">List of options to show products.
With it, we provide a bunch of methods to access and edit the options.
NOTE: we can not have an option that has a zero key ( 0 =&gt; "none"), as this does not work
(as it is equal to not completed yet - not yet entered in the Database).<type full="Array" namespace="" name="Array"/></var>
      </docblock>
    </member>
    <member name="allProducts" type="{unknown}" default="null" visibility="protected" line="624">
      <docblock>
        <description compact="This is the dataList that contains all the products"/>
        <var description="$allProducts" type="object">
          <type full="DataList" namespace="" name="DataList"/>
        </var>
      </docblock>
    </member>
    <method name="i18n_singular_name" start="137" end="137" abstract="false" final="false" static="false" visibility="public"/>
    <method name="i18n_plural_name" start="143" end="143" abstract="false" final="false" static="false" visibility="public"/>
    <method name="canEdit" start="156" end="167" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Shop Admins can edit"/>
        <param type="object" variable="$member">
          <type full="Member" namespace="" name="Member"/>
        </param>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="member" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="canView" start="174" end="179" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Shop Admins can edit"/>
        <param type="object" variable="$member">
          <type full="Member" namespace="" name="Member"/>
        </param>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="member" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="canDelete" start="187" end="189" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Standard SS method"/>
        <param type="object" variable="$member">
          <type full="Member" namespace="" name="Member"/>
        </param>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="member" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="canPublish" start="196" end="198" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Standard SS method"/>
        <param type="object" variable="$member">
          <type full="Member" namespace="" name="Member"/>
        </param>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="member" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="canDeleteFromLive" start="206" end="208" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Standard SS method //check if it is in a current cart?"/>
        <param type="object" variable="$member">
          <type full="Member" namespace="" name="Member"/>
        </param>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="member" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="canCreate" start="215" end="217" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Standard SS method"/>
        <param type="object" variable="$member">
          <type full="Member" namespace="" name="Member"/>
        </param>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="member" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="getSortFilterDisplayNames" start="256" end="270" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="returns the full sortFilterDisplayNames set or a subset by either type (e.g. FILER) or variable (e.g dbFieldName)"/>
        <param type="object" variable="$typeOfVariableName">
          <type full="String" namespace="" name="String"/>
        </param>
        <return type="object">
          <type full="Array" namespace="" name="Array"/>
        </return>
      </docblock>
      <parameter name="typeOrVariable" byreference="false" type="string" default="&quot;&quot;"/>
    </method>
    <method name="setCurrentUserPreference" start="280" end="282" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="sets a user preference.  This is typically used by the controller to set filter and sort."/>
        <param description="SORT | FILTER | DISPLAY" type="object" variable="$type">
          <type full="String" namespace="" name="String"/>
        </param>
        <param type="object" variable="$value">
          <type full="String" namespace="" name="String"/>
        </param>
      </docblock>
      <parameter name="type" byreference="false" type="{unknown}"/>
      <parameter name="value" byreference="false" type="{unknown}"/>
    </method>
    <method name="getCurrentUserPreferences" start="293" end="295" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Get a user preference.">This value can be updated by the controller
For example, the filter can be changed, based on a session value.</description>
        <param description="SORT | FILTER | DISPLAY" type="object" variable="$type">
          <type full="String" namespace="" name="String"/>
        </param>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
      <parameter name="type" byreference="false" type="{unknown}"/>
    </method>
    <method name="getUserPreferencesDefault" start="309" end="318" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="returns the default value"/>
        <param description="- FILTER | SORT | DISPLAY" type="object" variable="$type">
          <type full="String" namespace="" name="String"/>
        </param>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
      <parameter name="type" byreference="false" type="{unknown}"/>
    </method>
    <method name="getUserPreferencesOptionsForDropdown" start="344" end="360" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="SORT: returns an array of Key =&gt; Title for sort options">FILTER:
Returns options for the dropdown of filter options.

DISPLAY:
Returns the options for product display styles.
In the configuration you can set which ones are available.
If one is available then you must make sure that the corresponding template is available.
For example, if the display style is
MyTemplate =&gt; "All Details"
Then you must make sure MyTemplate.ss exists.</description>
        <param description="- FILTER | SORT | DISPLAY" type="object" variable="$type">
          <type full="String" namespace="" name="String"/>
        </param>
        <return type="object">
          <type full="Array" namespace="" name="Array"/>
        </return>
      </docblock>
      <parameter name="type" byreference="false" type="{unknown}"/>
    </method>
    <method name="getUserSettingsOptionSQL" start="382" end="400" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="SORT: Returns the sort sql for a particular sorting key.">If no key is provided then the default key will be returned.</description>
        <param type="object" variable="$key">
          <type full="String" namespace="" name="String"/>
        </param>
        <param description="- FILTER | SORT | DISPLAY" type="object" variable="$type">
          <type full="String" namespace="" name="String"/>
        </param>
        <param description="- the options selected" type="object" variable="$key">
          <type full="String" namespace="" name="String"/>
        </param>
        <return description="(e.g. Array(MyField =&gt; &quot;ASC&quot;, &quot;MyOtherField&quot; =&gt; &quot;DESC&quot;)" type="object">FILTER:
Returns the sql associated with a filter option.<type full="Array" namespace="" name="Array"/></return>
        <return description="(e.g. array(&quot;MyField&quot; =&gt; 1, &quot;MyOtherField&quot; =&gt; 0)) OR STRING!!!!" type="object">
          <type full="Array" namespace="" name="Array"/>
        </return>
      </docblock>
      <parameter name="type" byreference="false" type="{unknown}"/>
      <parameter name="key" byreference="false" type="string" default="&quot;&quot;"/>
      <inline>
        <comment value="if we cant find the current one, use the default" line="385"/>
      </inline>
    </method>
    <method name="getUserPreferencesTitle" start="417" end="429" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the Title for a type key.">If no key is provided then the default key is used.</description>
        <param description="- FILTER | SORT | DISPLAY" type="object" variable="$type">
          <type full="String" namespace="" name="String"/>
        </param>
        <param type="object" variable="$key">
          <type full="String" namespace="" name="String"/>
        </param>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
      <parameter name="type" byreference="false" type="{unknown}"/>
      <parameter name="key" byreference="false" type="string" default="&quot;&quot;"/>
    </method>
    <method name="MyLevelOfProductsToShow" start="440" end="452" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="object">
          <type full="Int" namespace="" name="Int"/>
        </return>
      </docblock>
      <inline>
        <comment value="reset to default" line="446"/>
      </inline>
    </method>
    <method name="getMyUserPreferencesDefault" start="464" end="479" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Checks for the most applicable user preferences for this page: 1. what is saved in Database for this page.">2. what the parent product group has saved in the database
3. what the standard default is</description>
        <param description="- FILTER | SORT | DISPLAY" type="object" variable="$type">
          <type full="String" namespace="" name="String"/>
        </param>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
      <parameter name="type" byreference="false" type="{unknown}"/>
    </method>
    <method name="MyDefaultDisplayStyle" start="481" end="483" abstract="false" final="false" static="false" visibility="public"/>
    <method name="getCMSActions" start="517" end="526" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="standard SS method"/>
        <return type="object">
          <type full="FieldList" namespace="" name="FieldList"/>
        </return>
      </docblock>
    </method>
    <method name="getCMSFields" start="532" end="596" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="standard SS method"/>
        <return type="object">
          <type full="FieldList" namespace="" name="FieldList"/>
        </return>
      </docblock>
      <inline>
        <comment value="dirty hack to show images!" line="534"/>
        <comment value="number of products" line="536"/>
        <comment value="sort" line="547"/>
        <comment value="filter" line="560"/>
        <comment value="display style" line="573"/>
      </inline>
    </method>
    <method name="getProductGroupsTable" start="602" end="610" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Used in getCSMFields"/>
        <return type="object">
          <type full="GridField" namespace="" name="GridField"/>
        </return>
      </docblock>
    </method>
    <method name="getProductsThatCanBePurchasedArray" start="648" end="650" abstract="false" final="false" static="false" visibility="public"/>
    <method name="ProductsShowable" start="668" end="677" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Retrieve a set of products, based on the given parameters.">This method is usually called by the various controller methods.
The extraFilter helps you to select different products,
depending on the method used in the controller.

Furthermore, extrafilter can take all sorts of variables.
This is basically setup like this so that in ProductGroup extensions you
can setup all sorts of filters, while still using the ProductsShowable method.

The extra filter can be supplied as array (e.g. array("ID" =&gt; 12) or array("ID" =&gt; array(12,13,45)))
or as string. Arrays are used like this $productDataList-&gt;filter($array) and
strings are used with the where commands $productDataList-&gt;where($string).</description>
        <param description="| string $extraFilter Additional SQL filters to apply to the Product retrieval" type="array"/>
        <return description="| Null" type="object">
          <type full="DataList" namespace="" name="DataList"/>
        </return>
      </docblock>
      <parameter name="extraFilter" byreference="false" type="string" default="''"/>
      <parameter name="alternativeSort" byreference="false" type="string" default="''"/>
      <inline>
        <comment value="get original products without sort" line="670"/>
        <comment value="sort products" line="673"/>
      </inline>
    </method>
    <method name="currentInitialProducts" start="695" end="721" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="returns the inital (all) products, based on the all the eligible products for the page.">This is THE pivotal method that probably changes for classes that
extend ProductGroup as here you can determine what products or other buyables are shown.

The return from this method will then be sorted to produce the final product list.

There is no sort for the initial retrieval

This method is public so that you can retrieve a list of products for a product group page.</description>
        <param description="| string $extraFilter Additional SQL filters to apply to the Product retrieval" type="array"/>
        <return type="object">
          <type full="DataList" namespace="" name="DataList"/>
        </return>
      </docblock>
      <parameter name="extraFilter" byreference="false" type="string" default="''"/>
      <inline>
        <comment value="INIT ALLPRODUCTS" line="699"/>
        <comment value="GROUP FILTER (PRODUCTS FOR THIS GROUP)" line="702"/>
        <comment value="STANDARD FILTER (INCLUDES USER PREFERENCE)" line="705"/>
        <comment value="EXTRA FILTER (ON THE FLY FROM CONTROLLER)" line="708"/>
        <comment value="JOINS" line="716"/>
      </inline>
    </method>
    <method name="currentFinalProducts" start="737" end="750" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="returns the final products, based on the all the eligile products for the page.">In the process we also save a list of included products
and we sort them.  We also keep a record of the total count.

All of the 'current' methods are to support the currentFinalProducts Method.</description>
        <todo value=": cache data for faster access."/>
        <param description="= Alternative Sort String" type="object" variable="$alternativeSort">
          <type full="String" namespace="" name="String"/>
        </param>
        <return type="object">
          <type full="DataList" namespace="" name="DataList"/>
        </return>
      </docblock>
      <parameter name="alternativeSort" byreference="false" type="string" default="&quot;&quot;"/>
    </method>
    <method name="getProductsAlsoInOtherGroups" start="762" end="764" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Do products occur in more than one group"/>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
    </method>
    <method name="getBuyableClassName" start="770" end="772" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Returns the class we are working with"/>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
    </method>
    <method name="getGroupFilter" start="780" end="806" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description/>
        <see value=": important notes at the top of this file / class">IMPORTANT: Adjusts allProducts and returns it...</see>
        <return type="object">
          <type full="DataList" namespace="" name="DataList"/>
        </return>
      </docblock>
      <inline>
        <comment value="special cases" line="783"/>
        <comment value="no produts but if LevelOfProductsToShow = -1 then show all" line="785"/>
      </inline>
    </method>
    <method name="getProductsToBeIncludedFromOtherGroups" start="815" end="831" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="If products are show in more than one group Then this returns a where phrase for any products that are linked to this product group"/>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
      <inline>
        <comment value="TO DO: this should actually return" line="816"/>
        <comment value="Product.ID = IN ARRAY(bla bla)" line="817"/>
        <comment value="@to do - make sure products are versioned!" line="824"/>
      </inline>
    </method>
    <method name="getStandardFilter" start="840" end="850" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description/>
        <see value=": important notes at the top of this class / file for more information!">IMPORTANT: Adjusts allProducts and returns it...</see>
        <return type="object">
          <type full="DataList" namespace="" name="DataList"/>
        </return>
      </docblock>
    </method>
    <method name="getGroupJoin" start="858" end="860" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Join statement for the product groups.">IMPORTANT: Adjusts allProducts and returns it...</description>
        <return type="object">
          <type full="DataList" namespace="" name="DataList"/>
        </return>
      </docblock>
    </method>
    <method name="currentSortSQL" start="867" end="870" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="returns the SORT part of the final selection of products."/>
        <return description="| Array" type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
    </method>
    <method name="removeExcludedProductsAndSaveIncludedProducts" start="879" end="914" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Excluded products that can not be purchased We all make a record of all the products that are in the current list For efficiency sake, we do both these things at the same time.">IMPORTANT: Adjusts allProducts and returns it...</description>
        <return type="object">
          <type full="DataList" namespace="" name="DataList"/>
        </return>
      </docblock>
    </method>
    <method name="currentWhereSQL" start="920" end="922" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="returns the CLASSNAME part of the final selection of products."/>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
    </method>
    <method name="currentClassNameSQL" start="928" end="930" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="returns the CLASSNAME part of the final selection of products."/>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
    </method>
    <method name="currentJoinSQL" start="936" end="938" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="returns the JOIN part of the final selection of products."/>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
    </method>
    <method name="TotalCount" start="948" end="950" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="returns the total numer of products (before pagination)"/>
        <return type="object">
          <type full="Integer" namespace="" name="Integer"/>
        </return>
      </docblock>
    </method>
    <method name="TotalCountGreaterThanOne" start="956" end="958" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="returns the total numer of products (before pagination)"/>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="greaterThan" byreference="false" type="integer" default="1"/>
    </method>
    <method name="ProductsPerPage" start="963" end="963" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="return Integer"/>
      </docblock>
    </method>
    <method name="MyNumberOfProductsPerPage" start="964" end="978" abstract="false" final="false" static="false" visibility="public"/>
    <method name="ChildGroups" start="994" end="1015" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns children ProductGroup pages of this group."/>
        <param description="- maximum depth , e.g. 1 = one level down - so no Child Groups are returned..." type="object" variable="$maxRecursiveLevel">
          <type full="Int" namespace="" name="Int"/>
        </param>
        <param description="- additional filter to be added" type="object" variable="$filter">
          <type full="String" namespace="" name="String"/>
        </param>
        <param description="- current level of depth" type="object" variable="$numberOfRecursions">
          <type full="Int" namespace="" name="Int"/>
        </param>
        <return description="(ProductGroups)" type="object">
          <type full="ArrayList" namespace="" name="ArrayList"/>
        </return>
      </docblock>
      <parameter name="maxRecursiveLevel" byreference="false" type="{unknown}"/>
      <parameter name="filter" byreference="false" type="string" default="&quot;&quot;"/>
      <parameter name="numberOfRecursions" byreference="false" type="integer" default="0"/>
    </method>
    <method name="ChildGroupsBackup" start="1020" end="1055" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Deprecated method"/>
      </docblock>
      <parameter name="maxRecursiveLevel" byreference="false" type="{unknown}"/>
      <parameter name="filter" byreference="false" type="string" default="&quot;&quot;"/>
      <inline>
        <comment value="@to do - make sure products are versioned!" line="1027"/>
      </inline>
    </method>
    <method name="ParentGroup" start="1061" end="1065" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="returns the parent page, but only if it is an instance of Product Group."/>
        <return description="| Null (ProductGroup)" type="object">
          <type full="DataObject" namespace="" name="DataObject"/>
        </return>
      </docblock>
    </method>
    <method name="GroupsMenu" start="1078" end="1085" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Recursively generate a product menu."/>
        <param type="object" variable="$filter">
          <type full="String" namespace="" name="String"/>
        </param>
        <return description="(ProductGroups)" type="object">
          <type full="ArrayList" namespace="" name="ArrayList"/>
        </return>
      </docblock>
      <parameter name="filter" byreference="false" type="string" default="&quot;ShowInMenus = 1&quot;"/>
    </method>
    <method name="BestAvailableImage" start="1099" end="1107" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="returns a &quot;BestAvailable&quot; image if the current one is not available In some cases this is appropriate and in some cases this is not.">For example, consider the following setup
- product A with three variations
- Product A has an image, but the variations have no images
With this scenario, you want to show ONLY the product image
on the product page, but if one of the variations is added to the
cart, then you want to show the product image.
This can be achieved bu using the BestAvailable image.</description>
        <return description="| Null" type="object">
          <type full="Image" namespace="" name="Image"/>
        </return>
      </docblock>
    </method>
    <method name="ProductGroupsFromAlsoShowProducts" start="1124" end="1137" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="returns a list of Product Groups that have the products for the CURRENT product group listed as part of their AlsoShowProducts list.">EXAMPLE:
You can use the AlsoShowProducts to list products by Brand.
In general, they are listed under type product groups (e.g. socks, sweaters, t-shirts),
and you create a list of separate ProductGroups (brands) that do not have ANY products as children,
but link to products using the AlsoShowProducts many_many relation.

With the method below you can work out a list of brands that apply to the
current product group (e.g. socks come in three brands - namely A, B and C)</description>
        <return type="object">
          <type full="DataList" namespace="" name="DataList"/>
        </return>
      </docblock>
      <inline>
        <comment value="just in case" line="1133"/>
        <comment value="HACK - we put SiteTree here because it did not seem to work to put ProductGroup" line="1135"/>
      </inline>
    </method>
    <method name="ProductGroupsFromAlsoShowProductsInverse" start="1146" end="1151" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="This is the inverse of ProductGroupsFromAlsoShowProducts That is, it list the product groups that a product is usually listed under (exact parents only) from a &quot;AlsoShow&quot; product List."/>
        <return type="object">
          <type full="DataList" namespace="" name="DataList"/>
        </return>
      </docblock>
      <inline>
        <comment value="HACK - we put SiteTree here because it did not seem to work to put ProductGroup" line="1149"/>
      </inline>
    </method>
    <method name="IsEcommercePage" start="1157" end="1159" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="tells us if the current page is part of e-commerce."/>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
    </method>
    <method name="onAfterWrite" start="1162" end="1170" abstract="false" final="false" static="false" visibility="public"/>
  </parent>
</class>
