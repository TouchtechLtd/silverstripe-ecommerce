<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src#" full="OrderModifier" namespace="" name="OrderModifier" abstract="false" final="false" start="32" end="763">
  <file path="./../../../code/model" file="OrderModifier.php" realpath="/var/www/3.1.silverstripe-ecommerce.com/ecommerce/code/model/OrderModifier.php" size="25295" time="2014-04-19T23:19:18+12:00" unixtime="1397906358" sha1="cd8557febca7f494665616da45fddcc246550bcd"/>
  <docblock>
    <description compact="which returns an array of IDs SEQUENCE - USE FOR ALL MODIFIERS!!! *** 1. model defining static variables (e.g. $db, $has_one) *** 2. cms variables + functions (e.g. getCMSFields, $searchableFields) *** 3. other (non) static variables (e.g. private static $special_name_for_something, protected $order) *** 4. CRUD functions (e.g. canEdit) *** 5. init and update functions *** 6. form functions (e. g. Showform and getform) *** 7. template functions (e.g. ShowInTable, TableTitle, etc...) ... USES DB VALUES *** 8. inner calculations.... USES CALCULATED VALUES *** 9. calculate database fields: protected function Live[field name]  ... USES CALCULATED VALUES *** 10. standard database related functions (e.g. onBeforeWrite, onAfterWrite, etc...) *** 11. AJAX related functions *** 12. debug functions">FAQs

*** What is the difference between cart and table ***
The Cart is a smaller version of the Table. Table is used for Checkout Page + Confirmation page.
Cart is used for other pages (pre-checkout for example). At times, the values and names may differ</description>
    <authors value=": Nicolaas [at] Sunny Side Up .co.nz"/>
    <package value=": ecommerce"/>
    <sub value="-package: model"/>
    <inspiration value=": Silverstripe Ltd, Jeremy"/>
  </docblock>
  <extends full="OrderAttribute" namespace="" name="OrderAttribute"/>
  <member name="api_access" type="array" visibility="private" line="38">
    <docblock>
      <description compact="what variables are accessible through  http://mysite.com/api/ecommerce/v1/OrderModifier/"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="db" type="array" visibility="private" line="60">
    <docblock>
      <description/>
      <var type="array">stardard SS definition</var>
    </docblock>
  </member>
  <member name="defaults" type="array" visibility="private" line="71">
    <docblock>
      <description compact="make sure to choose the right Type and Name for this.">stardard SS variable</description>
      <var type="object">
        <type full="Array" namespace="" name="Array"/>
      </var>
    </docblock>
  </member>
  <member name="searchable_fields" type="array" visibility="private" line="81">
    <docblock>
      <description compact="stardard SS variable"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="summary_fields" type="array" visibility="private" line="95">
    <docblock>
      <description compact="stardard SS definition"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="casting" type="array" visibility="private" line="105">
    <docblock>
      <description compact="stardard SS definition"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="singular_name" type="string" default="&quot;Order Modifier&quot;" visibility="private" line="113">
    <docblock>
      <description compact="stardard SS variable"/>
      <var type="object">
        <type full="String" namespace="" name="String"/>
      </var>
    </docblock>
  </member>
  <method name="i18n_singular_name" start="114" end="114" abstract="false" final="false" static="false" visibility="public"/>
  <member name="plural_name" type="string" default="&quot;Order Modifiers&quot;" visibility="private" line="120">
    <docblock>
      <description compact="stardard SS variable"/>
      <var type="object">
        <type full="String" namespace="" name="String"/>
      </var>
    </docblock>
  </member>
  <method name="i18n_plural_name" start="121" end="121" abstract="false" final="false" static="false" visibility="public"/>
  <member name="description" type="string" default="&quot;An addition to the order that sits between the sub-total and the total (e.g. tax, delivery, etc...).&quot;" visibility="private" line="127">
    <docblock>
      <description compact="Standard SS variable."/>
      <var type="object">
        <type full="String" namespace="" name="String"/>
      </var>
    </docblock>
  </member>
  <method name="getCMSFields" start="133" end="177" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="stardard SS metbod"/>
      <return type="object">
        <type full="FieldList" namespace="" name="FieldList"/>
      </return>
    </docblock>
    <inline>
      <comment value="OrderID Field" line="157"/>
      <comment value="ClassName Field" line="165"/>
    </inline>
  </method>
  <method name="scaffoldSearchFields" start="195" end="199" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Determine which properties on the DataObject are searchable, and map them to their default {@link FormField} representations. Used for scaffolding a searchform for {@link ModelAdmin}.">Some additional logic is included for switching field labels, based on
how generic or specific the field type is.
Used by <link xmlns="http://xml.phpdox.net/src#" value="SearchContext"/>.
</description>
      <param type="array" variable="$_params">'fieldClasses': Associative array of field names as keys and FormField classes as values
	'restrictFields': Numeric array of a field name whitelist</param>
      <return type="object">
        <type full="FieldList" namespace="" name="FieldList"/>
      </return>
    </docblock>
    <parameter name="_params" byreference="false" type="{unknown}" default="null"/>
  </method>
  <member name="doNotAddAutomatically" type="{unknown}" default="false" visibility="protected" line="209">
    <docblock>
      <description compact="$doNotAddAutomatically Identifies whether a modifier is NOT automatically added Most modifiers, such as delivery and GST would be added automatically.">However, there are also ones that are not added automatically.</description>
      <var type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </var>
    </docblock>
  </member>
  <member name="canBeRemoved" type="{unknown}" default="false" visibility="protected" line="215">
    <docblock>
      <description compact="$can_be_removed Identifies whether a modifier can be removed by the user."/>
      <var type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </var>
    </docblock>
  </member>
  <member name="baseInitCalled" type="{unknown}" default="false" visibility="protected" line="222">
    <docblock>
      <description compact="we use this variable to make sure that the parent::runUpdate() is called in all child classes this is similar to the checks run for parent::init in the controller class."/>
      <var type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </var>
    </docblock>
  </member>
  <member name="mustUpdate" type="{unknown}" default="false" visibility="protected" line="229">
    <docblock>
      <description compact="This is a flag for running an update.">Running an update means that all fields are (re)set, using the Live{FieldName} methods.</description>
      <var type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </var>
    </docblock>
  </member>
  <member name="runningTotal" type="integer" default="0" visibility="private" line="239">
    <docblock>
      <description compact="When recalculating all the modifiers, this private variable is added to as a running total other modifiers can then tap into this to work out their own values.">For example, a tax modifier needs to know the value of the other modifiers before calculating
its own value (i.e. tax is also paid over handling and shipping).
Always consider the "order" (which one first) of the order modifiers when using this variable.</description>
      <var type="object">
        <type full="Float" namespace="" name="Float"/>
      </var>
    </docblock>
  </member>
  <method name="init_for_order" start="251" end="254" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
    </docblock>
    <parameter name="className" byreference="false" type="{unknown}"/>
  </method>
  <method name="init" start="259" end="265" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="This method runs when the OrderModifier is first added to the order."/>
    </docblock>
  </method>
  <method name="runUpdate" start="271" end="282" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="all classes extending OrderModifier must have this method if it has more fields"/>
      <param description="- run it, even if it has run already" type="object" variable="$recalculate">
        <type full="Bool" namespace="" name="Bool"/>
      </param>
    </docblock>
    <parameter name="recalculate" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="canBeUpdated" start="288" end="290" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="You can overload this method as canEdit might not be the right indicator."/>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
  </method>
  <method name="canCreate" start="296" end="298" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="standard SS Method"/>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
    <parameter name="member" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="canDelete" start="304" end="306" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="standard SS Method"/>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
    <parameter name="member" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="checkField" start="312" end="322" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="This method simply checks if a fields has changed and if it has changed it updates the field."/>
      <param type="object" variable="$fieldName">
        <type full="String" namespace="" name="String"/>
      </param>
    </docblock>
    <parameter name="fieldName" byreference="false" type="{unknown}"/>
  </method>
  <method name="CalculationTotal" start="330" end="335" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Provides a modifier total that is positive or negative, depending on whether the modifier is chargable or not.">This number is used to work out the order Grand Total.....
It is important to note that this can be positive or negative, while the amount is always positive.</description>
      <return description="/ double" type="float"/>
    </docblock>
  </method>
  <method name="ShowForm" start="345" end="347" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="This determines whether the OrderModifierForm is shown or not. {@link OrderModifier::get_form()}.">OrderModifierForms are forms that are added to check out to facilitate the use of the modifier.
An example would be a form allowing the user to select the delivery option.</description>
      <return type="boolean"/>
    </docblock>
  </method>
  <method name="ShowFormInEditableOrderTable" start="354" end="357" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Should the form be included in the EDITABLE form on the checkout page?"/>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
    <inline>
      <comment value="extend in OrderModifier Extensions" line="355"/>
    </inline>
  </method>
  <method name="ShowFormOutsideEditableOrderTable" start="364" end="367" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Should the form be shown outside of editable table on the checkout page (opposite of ShowFormInEditableOrderTable)?"/>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
    <inline>
      <comment value="extend in OrderModifier Extensions" line="365"/>
    </inline>
  </method>
  <method name="getModifierForm" start="379" end="386" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="This function returns a form that allows a user to change the modifier to the order.">We have mainly added this function as an example!</description>
      <param description="- optional custom controller class" type="object" variable="$optionalController">
        <type full="Controller" namespace="" name="Controller"/>
      </param>
      <param description="- optional custom validator class" type="object" variable="$optionalValidator">
        <type full="Validator" namespace="" name="Validator"/>
      </param>
      <return description="or subclass" type="object">
        <type full="OrderModifierForm" namespace="" name="OrderModifierForm"/>
      </return>
    </docblock>
    <parameter name="optionalController" byreference="false" type="object" default="null">
      <type full="\\Controller" namespace="\" name="Controller"/>
    </parameter>
    <parameter name="optionalValidator" byreference="false" type="object" default="null">
      <type full="\\Validator" namespace="\" name="Validator"/>
    </parameter>
  </method>
  <method name="headingField" start="392" end="398" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <return description="(HeadingField)" type="object">
        <type full="Object" namespace="" name="Object"/>
      </return>
    </docblock>
  </method>
  <method name="descriptionField" start="404" end="410" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description/>
      <return description="(LiteralField)" type="object">
        <type full="Object" namespace="" name="Object"/>
      </return>
    </docblock>
  </method>
  <method name="TableTitle" start="419" end="419" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Casted variable, returns the table title."/>
      <return type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
  </method>
  <method name="getTableTitle" start="420" end="422" abstract="false" final="false" static="false" visibility="public"/>
  <member name="orderModifier_Descriptor" type="{unknown}" default="null" visibility="private" line="428">
    <docblock>
      <description compact="caching of relevant OrderModifier_Descriptor"/>
      <var type="object">
        <type full="OrderModifier_Descriptor" namespace="" name="OrderModifier_Descriptor"/>
      </var>
    </docblock>
  </member>
  <method name="getOrderModifier_Descriptor" start="434" end="441" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="returns the relevant orderModifier_Descriptor"/>
      <return description="| Null" type="object">
        <type full="OrderModifier_Descriptor" namespace="" name="OrderModifier_Descriptor"/>
      </return>
    </docblock>
  </method>
  <method name="Heading" start="447" end="452" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="returns a heading if there is one."/>
      <return type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
  </method>
  <method name="Description" start="458" end="463" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="returns a description if there is one."/>
      <return description="(html)" type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
  </method>
  <method name="MoreInfoPage" start="469" end="474" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="returns a page for a more info link... (if there is one)"/>
      <return description="(SiteTree)" type="object">
        <type full="Object" namespace="" name="Object"/>
      </return>
    </docblock>
  </method>
  <method name="ShowInTable" start="482" end="487" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="tells you whether the modifier shows up on the checkout  / cart form.">this is also the place where we check if the modifier has been updated.</description>
      <return type="object">
        <type full="Boolean" namespace="" name="Boolean"/>
      </return>
    </docblock>
  </method>
  <method name="TableValueAsMoney" start="494" end="494" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the Money object of the Table Value"/>
      <return type="object">
        <type full="Money" namespace="" name="Money"/>
      </return>
    </docblock>
  </method>
  <method name="getTableValueAsMoney" start="495" end="497" abstract="false" final="false" static="false" visibility="public"/>
  <method name="HideInAjaxUpdate" start="504" end="512" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="some modifiers can be hidden after an ajax update (e.g. if someone enters a discount coupon and it does not exist).">There might be instances where ShowInTable (the starting point) is TRUE and HideInAjaxUpdate return false.
return Boolean</description>
    </docblock>
  </method>
  <method name="CanBeRemoved" start="519" end="521" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks if the modifier can be removed."/>
      <return type="boolean"/>
    </docblock>
  </method>
  <method name="CanAdd" start="528" end="530" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks if the modifier can be added manually"/>
      <return type="boolean"/>
    </docblock>
  </method>
  <method name="DoNotAddAutomatically" start="536" end="538" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="dentifier whether a modifier will be added automatically for all new orders."/>
      <return type="boolean"/>
    </docblock>
  </method>
  <method name="CalculatedTotal" start="545" end="547" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Actual calculation used"/>
      <return description="/ Double" type="object">
        <type full="Float" namespace="" name="Float"/>
      </return>
    </docblock>
  </method>
  <method name="AddLink" start="553" end="557" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="This link is for modifiers that have been removed and are being put &quot;back&quot;."/>
      <return type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
  </method>
  <method name="RemoveLink" start="563" end="567" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Link that can be used to remove the modifier"/>
      <return type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
  </method>
  <method name="PostSubmitAction" start="573" end="575" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="retursn and array like this: array(Title =&gt; &quot;bla&quot;, Link =&gt; &quot;/doit/now/&quot;);"/>
      <return type="object">
        <type full="Array" namespace="" name="Array"/>
      </return>
    </docblock>
  </method>
  <method name="getRunningTotal" start="584" end="586" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="returns the running total variable"/>
      <see value="variable definition for more information"/>
      <return type="object">
        <type full="Float" namespace="" name="Float"/>
      </return>
    </docblock>
  </method>
  <method name="LiveName" start="590" end="594" abstract="false" final="false" static="false" visibility="protected"/>
  <method name="LiveTableValue" start="596" end="598" abstract="false" final="false" static="false" visibility="protected"/>
  <method name="LiveCalculatedTotal" start="607" end="609" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="This function is always called to determine the amount this modifier needs to charge or deduct - if any."/>
      <return type="object">
        <type full="Currency" namespace="" name="Currency"/>
      </return>
    </docblock>
  </method>
  <method name="IsChargeable" start="618" end="620" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="should be extended if it is true in child class"/>
      <return type="boolean"/>
    </docblock>
  </method>
  <method name="IsDeductable" start="625" end="627" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="should be extended if it is true in child class"/>
      <return type="boolean"/>
    </docblock>
  </method>
  <method name="IsNoChange" start="633" end="635" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="should be extended if it is true in child class"/>
      <return type="boolean"/>
    </docblock>
  </method>
  <method name="IsRemoved" start="642" end="644" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="should be extended if it is true in child class Needs to be a public class"/>
      <return type="boolean"/>
    </docblock>
  </method>
  <method name="onBeforeWrite" start="653" end="655" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="standard SS method"/>
    </docblock>
  </method>
  <method name="onBeforeRemove" start="664" end="666" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="removing the Order Modifier does not delete it rather, it ignores it (e.g. remove discount coupon) We cant delete it, because we need to have a positive record of it being removed.">Extend on Child Classes</description>
    </docblock>
  </method>
  <method name="onAfterRemove" start="675" end="677" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="removing the Order Modifier does not delete it rather, it ignores it (e.g. remove discount coupon) We cant delete it, because we need to have a positive record of it being removed.">Extend on Child Classes</description>
    </docblock>
  </method>
  <method name="updateForAjax" start="689" end="748" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="javascript array" type="object" variable="$js">
        <type full="Array" namespace="" name="Array"/>
      </param>
      <return description="for AJAX JSON" type="object">
        <type full="Array" namespace="" name="Array"/>
      </return>
    </docblock>
    <parameter name="js" byreference="false" type="array"/>
    <inline>
      <comment value="TableValue is a database value" line="699"/>
    </inline>
  </method>
  <method name="debug" start="757" end="760" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Debug helper method.">Access through : /shoppingcart/debug/</description>
    </docblock>
  </method>
  <parent full="OrderAttribute" namespace="" name="OrderAttribute">
    <extends full="DataObject" namespace="" name="DataObject"/>
    <member name="_canEdit" type="{unknown}" default="null" visibility="protected" line="113">
      <docblock>
        <description compact="save edit status for speed's sake"/>
        <var type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </var>
      </docblock>
    </member>
    <member name="_canView" type="{unknown}" default="null" visibility="protected" line="119">
      <docblock>
        <description compact="save view status for speed's sake"/>
        <var type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </var>
      </docblock>
    </member>
    <method name="i18n_singular_name" start="94" end="94" abstract="false" final="false" static="false" visibility="public"/>
    <method name="i18n_plural_name" start="101" end="101" abstract="false" final="false" static="false" visibility="public"/>
    <method name="init" start="127" end="129" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="extended in OrderModifier and OrderItem Starts up the order Atribute TODO: introduce system like we have for Controller which makes sure that all parent init methods are called."/>
      </docblock>
    </method>
    <method name="canCreate" start="136" end="138" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="standard SS method"/>
        <param type="object" variable="$member">
          <type full="Member" namespace="" name="Member"/>
        </param>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="member" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="canView" start="146" end="163" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Standard SS method This is an important method."/>
        <param type="object" variable="$member">
          <type full="Member" namespace="" name="Member"/>
        </param>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="member" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="canEdit" start="171" end="188" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Standard SS method This is an important method."/>
        <param type="object" variable="$member">
          <type full="Member" namespace="" name="Member"/>
        </param>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="member" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="canDelete" start="195" end="197" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Standard SS method"/>
        <param type="object" variable="$member">
          <type full="Member" namespace="" name="Member"/>
        </param>
        <return type="object">
          <type full="Boolean" namespace="" name="Boolean"/>
        </return>
      </docblock>
      <parameter name="member" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="OrderAttributeType" start="216" end="218" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="This is a key function that returns the type of the object.  In principle anything can be returned but the intention is to only return a few options e.g. OrderItem, Tax, Delivery, etc... so that computations can be carried out based on the type of OrderAttribute we are looking at.">It also allows to get a group of Order Attributes that
contains both modifiers and orderItems.</description>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
    </method>
    <method name="Order" start="224" end="226" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="returns the order - for some unknown reason it seems we need this."/>
        <return description="| null" type="object">
          <type full="Order" namespace="" name="Order"/>
        </return>
      </docblock>
    </method>
    <method name="Classes" start="240" end="251" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return a string of class names, in order of hierarchy from OrderAttribute for the current attribute.">e.g.: "product_orderitem orderitem
orderattribute".

Used by the templates and for ajax updating functionality.</description>
        <return type="string"/>
      </docblock>
    </method>
    <method name="AJAXDefinitions" start="260" end="262" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="returns the instance of EcommerceConfigAjax for use in templates.">In templates, it is used like this:
$EcommerceConfigAjax.TableID</description>
        <return type="object">
          <type full="EcommerceConfigAjax" namespace="" name="EcommerceConfigAjax"/>
        </return>
      </docblock>
    </method>
    <method name="EcomConfig" start="269" end="271" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="returns the instance of EcommerceDBConfig"/>
        <return type="object">
          <type full="EcommerceDBConfig" namespace="" name="EcommerceDBConfig"/>
        </return>
      </docblock>
    </method>
    <method name="ShowInTable" start="277" end="279" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="hould this item be shown on check out page table? return Boolean"/>
      </docblock>
    </method>
    <method name="ShowInCart" start="285" end="287" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="hould this item be shown on in the cart (which is on other pages than the checkout page) return Boolean"/>
      </docblock>
    </method>
    <method name="TableTitle" start="295" end="295" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return a name of what this attribute is called e.g. &quot;Product 21&quot; or &quot;Discount&quot;"/>
        <return type="string"/>
      </docblock>
    </method>
    <method name="getTableTitle" start="296" end="298" abstract="false" final="false" static="false" visibility="public"/>
    <method name="CartTitle" start="306" end="306" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return a name of what this attribute is called e.g. &quot;Product 21&quot; or &quot;Discount&quot; Cart is a short version of table"/>
        <return type="string"/>
      </docblock>
    </method>
    <method name="getCartTitle" start="307" end="309" abstract="false" final="false" static="false" visibility="public"/>
    <method name="TableSubTitle" start="315" end="315" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="the sub title for the order item or order modifier"/>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
    </method>
    <method name="getTableSubTitle" start="316" end="318" abstract="false" final="false" static="false" visibility="public"/>
    <method name="TableSubTitleNOHTML" start="325" end="325" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="the sub title for the order item or order modifier"/>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
    </method>
    <method name="getTableSubTitleNOHTML" start="326" end="326" abstract="false" final="false" static="false" visibility="public"/>
    <method name="CartSubTitle" start="333" end="333" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="the sub title for the order item or order modifier.">Cart is a short version of table</description>
        <return type="object">
          <type full="String" namespace="" name="String"/>
        </return>
      </docblock>
    </method>
    <method name="getCartSubTitle" start="334" end="336" abstract="false" final="false" static="false" visibility="public"/>
    <method name="CalculatedTotalAsMoney" start="342" end="342" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the Money object of the CalculatedTotal"/>
        <return type="object">
          <type full="Money" namespace="" name="Money"/>
        </return>
      </docblock>
    </method>
    <method name="getCalculatedTotalAsMoney" start="343" end="345" abstract="false" final="false" static="false" visibility="public"/>
    <method name="onBeforeWrite" start="351" end="358" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Standard SS method We add the Sort value from the OrderAttribute_Group to the OrderAttribute."/>
      </docblock>
    </method>
    <method name="onAfterWrite" start="363" end="367" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Standard SS method"/>
      </docblock>
      <inline>
        <comment value="crucial!" line="365"/>
      </inline>
    </method>
    <method name="debug" start="373" end="376" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Debug helper method.">Access through : /shoppingcart/debug/</description>
      </docblock>
    </method>
  </parent>
</class>
